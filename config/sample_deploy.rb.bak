##############
# this recipe is from 
# http://www.zorched.net/2008/06/17/capistrano-deploy-with-git-and-passenger/
##############
set :application, "WarRoom"
 
# If you aren't deploying to /u/apps/#{application} on the target
# servers (which is the default), you can specify the actual location
# via the :deploy_to variable:
set :deploy_to, "/var/www/#{application}"
 
default_run_options[:pty] = true
set :repository,  "git@github.com:slashk/warroom.git"
set :scm, "git"
set :user, "deployer"
set :branch, "master"
set :deploy_via, :remote_cache
 
set :ssh_options, { :forward_agent => true }

########## 
role :app, "your.server.com"
role :web, "your.server.com"
role :db,  "your.server.com", :primary => true
 
#########
after "deploy:finalize_update", "db:symlink"

namespace :deploy do
  desc "Restarting mod_rails with restart.txt"
  task :restart, :roles => :app, :except => { :no_release => true } do
    run "touch #{current_path}/tmp/restart.txt"
  end
 
  [:start, :stop].each do |t|
    desc "#{t} task is a no-op with mod_rails"
    task t, :roles => :app do ; end
  end
end

namespace :db do
  desc "Updates the symlink for database.yml file to the just deployed release."
  task :symlink, :except => { :no_release => true } do
    run "ln -nfs #{shared_path}/config/database.yml #{release_path}/config/database.yml"
  end
end


# found at http://errtheblog.com/posts/19-streaming-capistrano
desc "tail production log files" 
task :tail_logs, :roles => :app do
  run "tail -f #{shared_path}/log/production.log" do |channel, stream, data|
    puts  # for an extra line break before the host name
    puts "#{channel[:host]}: #{data}" 
    break if stream == :err    
  end
end
